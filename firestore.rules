rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document, admins can manage all users
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Teams - readable by all authenticated users, writable by admin only
    match /teams/{teamId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Players - readable by all authenticated users, writable by admin
    match /players/{playerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Auction rounds - readable by all authenticated users, writable by admin only
    match /auctionRounds/{roundId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Bids - readable by all authenticated users, writable by authenticated users
    match /bids/{bidId} {
      allow read, write: if request.auth != null;
    }
    
    // Target Players - Fixed rules to work with ownerId-based team ownership
    match /targetPlayers/{targetPlayerId} {
      allow read, write: if request.auth != null && (
        // Admin and manager can access all target players
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'] ||
        // Team owners can access target players for teams they own
        exists(/databases/$(database)/documents/teams/$(resource.data.teamId)) &&
        get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.ownerId == request.auth.uid
      );
      allow create: if request.auth != null && (
        // Admin and manager can create target players for any team
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'] ||
        // Team owners can create target players for teams they own
        exists(/databases/$(database)/documents/teams/$(request.resource.data.teamId)) &&
        get(/databases/$(database)/documents/teams/$(request.resource.data.teamId)).data.ownerId == request.auth.uid
      );
    }
  }
}